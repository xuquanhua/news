/** * Created by xuqh on 2016/8/18. */import React, { Component } from 'react'import { connect } from 'react-redux'import { addTodo, completeTodo, setVisibilityFilter, VisibilityFilters } from '../actions/task.js'import NavigationRedux from '../components/NavigationRedux'import LoadingRedux from '../components/LoadingRedux'import { ListBoxRedux } from '../components/ListBoxRedux'class newsApp extends Component {	constructor(props) {		super(props);	}	render() {		// Injected by connect() call:		const { dispatch, newsType, myState, lists } = this.props		return (			<div>				<NavigationRedux  newsType={newsType} ></NavigationRedux>				<LoadingRedux loadType={myState.changeApp.changeLoad} dispatch={dispatch}></LoadingRedux>				<ListBoxRedux newsType={this.props.params.newsType} dispatch={dispatch} lists={lists} ></ListBoxRedux>			</div>		)	}	componentWillReceiveProps(props){		//console.log(props.params.newType)	}}function select(state) {	return {		//初始化默认项		newsType: 'recommend',		myState: state,		lists: state.changeApp.newsList}}// 包装 component ，注入 dispatch 和 state 到其默认的 connect(select)(TaskApp) 中；export default connect(select)(newsApp)